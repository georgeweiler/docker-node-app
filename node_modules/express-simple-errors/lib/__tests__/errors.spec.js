'use strict';

var _index = require('../index');

describe('Error Classes', function () {
  it('allow Bad Request error', function () {
    var BadRequest = new _index.errors.BadRequest();
    expect(BadRequest).toMatchSnapshot();
    expect(BadRequest.code).toBe(400);
    expect(BadRequest.message).toBe('Bad Request');
  });
  it('allow Unauthorized error', function () {
    var Unauthorized = new _index.errors.Unauthorized();
    expect(Unauthorized).toMatchSnapshot();
    expect(Unauthorized.code).toBe(401);
    expect(Unauthorized.message).toBe('Unauthorized');
  });
  it('allow Forbidden error', function () {
    var Forbidden = new _index.errors.Forbidden();
    expect(Forbidden).toMatchSnapshot();
    expect(Forbidden.code).toBe(403);
    expect(Forbidden.message).toBe('Forbidden');
  });
  it('allow Not Found error', function () {
    var NotFound = new _index.errors.NotFound();
    expect(NotFound).toMatchSnapshot();
    expect(NotFound.code).toBe(404);
    expect(NotFound.message).toBe('Not Found');
  });
  it('allow Conflict error', function () {
    var Conflict = new _index.errors.Conflict();
    expect(Conflict).toMatchSnapshot();
    expect(Conflict.code).toBe(409);
    expect(Conflict.message).toBe('Conflict');
  });
  it('allow Unsupported Media Type error', function () {
    var UnsupportedMediaType = new _index.errors.UnsupportedMediaType();
    expect(UnsupportedMediaType).toMatchSnapshot();
    expect(UnsupportedMediaType.code).toBe(415);
    expect(UnsupportedMediaType.message).toBe('Unsupported Media Type');
  });
});