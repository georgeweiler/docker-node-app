{"version":3,"sources":["../src/server.js"],"names":["app","use"],"mappings":";;;;;;AAAA;;;;AAGA;;;;AACA;;;;;;AAHA;AACA;AAIA,IAAMA,MAAM,wBAAZ;;AAEA;AACA;AACA;AACA;;AAEAA,IAAIC,GAAJ,CAAQ,GAAR,EAAa,uBAAb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;kBAEeD,G","file":"server.js","sourcesContent":["import express from 'express';\n// import bodyParser from 'body-parser';\n// import cors from 'cors';\nimport ErrorHandler from 'express-simple-errors';\nimport routes from './routes';\n\nconst app = express();\n\n// app middleware\n// app.use(cors());\n// app.use(bodyParser.json({type: 'application/json'}));\n// app.disable('etag');\n\napp.use('/', routes());\n\n// const errorHandler = new ErrorHandler();\n\n// app.use((err, req, res, next) => {\n//   if (err.validator) {\n//     err.name = 'ValidationError';\n//     err.code = 400;\n//   }\n//   next(err);\n// });\n\n// errorHandler.setHandler('ValidationError', function validationHandler (err, stack) {\n//   const res = {};\n//   res.status = 'Error';\n//   res.message = `Schema Validation Error: ${err.message}`;\n//   res.code = err.code;\n//   if (stack) res.stackTrace = err.stack;\n//   return res;\n// });\n\n// app.use(errorHandler.middleware());\n\nexport default app;\n"]}